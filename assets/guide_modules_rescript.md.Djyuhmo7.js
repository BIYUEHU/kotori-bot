import{_ as i,c as a,a0 as t,o as n}from"./chunks/framework.D5XSuxOt.js";const c=JSON.parse('{"title":"使用 ReScript 开发","description":"","frontmatter":{},"headers":[],"relativePath":"guide/modules/rescript.md","filePath":"guide/modules/rescript.md","lastUpdated":1731827740000}'),h={name:"guide/modules/rescript.md"};function p(e,s,k,l,r,d){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="使用-rescript-开发" tabindex="-1">使用 ReScript 开发 <a class="header-anchor" href="#使用-rescript-开发" aria-label="Permalink to &quot;使用 ReScript 开发&quot;">​</a></h1><p><strong>ReScript</strong> 是一门健壮的类型化语言，可以编译成高效易读的 JavaScript。相比于 TypeScript，ReScript 是 JavaScript 的子集，有着远比 TypeScript 更为严格和安全的类型系统。也是 <a href="https://ocaml.org/" target="_blank" rel="noreferrer">OCaml</a> 的方言之一，结合了大量函数式编程与现代化编程特性，同时保留了 C 系语言的花括号语法风格，这使你不会像面对其它函数式编程一样对其陌生语法感到茫然，变得极易上手和入门。如果你是一名 Rust 开发者将会对 ReScript 很多地方感到亲切（就像是没有所有权和生命周期的 Rust）。</p><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>详细信息与入门指南请参考 <a href="https://rescript-lang.org/" target="_blank" rel="noreferrer">The ReScript Programming Language</a>。</p></div><h2 id="基本使用" tabindex="-1">基本使用 <a class="header-anchor" href="#基本使用" aria-label="Permalink to &quot;基本使用&quot;">​</a></h2><p>Kotori 从 v1.7 开始支持用 ReScript 编写插件，尽管这并非强制性，但如若你对函数式编程感兴趣或者对安全性有要求，那么使用 ReScript 编写 Kotori 插件将是不二之举。</p><div class="language-res vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">res</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> main</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">ctx</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> Kotori</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">context</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> =&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">   open</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> Kotori</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Utils</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">   &quot;echo &lt;message&gt; - print string&quot;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">ctx</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">cmd</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">new</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">ctx</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">cmd</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">action</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">async</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> ({</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">msg</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]},</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> session</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> =&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">	   msg</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">session</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">quick</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">	   &quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">   })</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-&gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">ignore</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre></div>`,6)]))}const o=i(h,[["render",p]]);export{c as __pageData,o as default};
